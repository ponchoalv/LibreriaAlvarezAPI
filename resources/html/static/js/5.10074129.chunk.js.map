{"version":3,"sources":["components/TableComponents/ExcelExportButton.tsx"],"names":["ExcelFile","ReactExport","ExcelSheet","ExcelDownloadButton","rows","buttonText","colorBoton","excelDataSet","columns","title","width","wch","data","map","row","value","desc","style","border","color","code","price","numFmt","lista","fecha","element","dataSet","name"],"mappings":"kQAAA,6CAKMA,EAAYC,IAAYD,UACxBE,EAAaD,IAAYD,UAAUE,WAoC1BC,UA5Bf,YAAwE,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,WASvCC,EAAe,CACjB,CACAC,QAAS,CACL,CAAEC,MAAO,SAAUC,MAAO,CAAEC,IAAK,KACjC,CAAEF,MAAO,YAAUC,MAAO,CAAEC,IAAK,KACjC,CAAEF,MAAO,SAAUC,MAAO,CAAEC,IAAK,KACjC,CAAEF,MAAO,QAASC,MAAO,CAAEC,IAAK,KAChC,CAAEF,MAAO,QAASC,MAAO,CAAEC,IAAK,MAEpCC,KAhBAR,EAAKS,IAAI,SAAAC,GAAG,MAAK,CACT,CAAEC,MAAMD,EAAIE,KAAMC,MAAO,CAACC,OAAQ,CAACD,MAAO,SAA8BE,MAAO,MAC/E,CAAEJ,MAAOD,EAAIM,KAAMH,MAAO,CAACC,OAAQ,CAACD,MAAO,SAA8BE,MAAO,MAChF,CAAEJ,MAAOD,EAAIO,MAAOJ,MAAO,CAACK,OAAQ,YAAaJ,OAAQ,CAACD,MAAO,SAA8BE,MAAO,MACtG,CAAEJ,MAAOD,EAAIS,MAAON,MAAO,CAACC,OAAQ,CAACD,MAAO,SAA8BE,MAAO,MACjF,CAAEJ,MAAOD,EAAIU,MAAOP,MAAO,CAACC,OAAQ,CAACD,MAAO,SAA8BE,MAAO,WAc7F,OACI,gBAACnB,EAAD,CAAWyB,QAAS,gBAAC,IAAD,CAAQN,MAAOb,GAAaD,IAC5C,gBAACH,EAAD,CAAYwB,QAASnB,EAAcoB,KAAK","file":"static/js/5.10074129.chunk.js","sourcesContent":["import * as React from 'react';\nimport ReactExport, { ExcelBorderStyle, ExcelCellData } from 'react-data-export';\nimport { Button } from 'reactstrap';\nimport { IPriceRow } from '../../types';\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n\nexport interface IProps {\n    rows: IPriceRow[];\n    buttonText: string;\n    colorBoton: string;\n}\n\nfunction ExcelDownloadButton({ rows, buttonText, colorBoton }: IProps) {\n    const mapedData: ExcelCellData[] = \n        rows.map(row =>  [   \n                { value:row.desc, style: {border: {style: \"medium\" as ExcelBorderStyle, color: {}}}},\n                { value: row.code, style: {border: {style: \"medium\" as ExcelBorderStyle, color: {}}}},\n                { value: row.price, style: {numFmt: \"$#,##0.00\", border: {style: \"medium\" as ExcelBorderStyle, color: {}}}},\n                { value: row.lista, style: {border: {style: \"medium\" as ExcelBorderStyle, color: {}}}},\n                { value: row.fecha, style: {border: {style: \"medium\" as ExcelBorderStyle, color: {}}}},\n        ]);\n    const excelDataSet = [\n        {\n        columns: [\n            { title: \"Nombre\", width: { wch: 40 } },\n            { title: \"CÃ³digo\", width: { wch: 15 } },\n            { title: \"Precio\", width: { wch: 15 } },\n            { title: \"Lista\", width: { wch: 15 } },\n            { title: \"Fecha\", width: { wch: 15 } },\n        ],\n        data: mapedData\n    }];\n\n    return (\n        <ExcelFile element={<Button color={colorBoton}>{buttonText}</Button>}>\n            <ExcelSheet dataSet={excelDataSet} name=\"Precios\" />\n        </ExcelFile>\n    );\n}\n\nexport default ExcelDownloadButton;"],"sourceRoot":""}