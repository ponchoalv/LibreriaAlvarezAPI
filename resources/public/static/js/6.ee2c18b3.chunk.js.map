{"version":3,"sources":["assets/logo-black.png","assets/logo-small.png","components/Home.tsx","components/NavMenu.tsx","components/TableComponents/LazyDownloadButton.tsx","components/TableComponents/TableRow.tsx","components/TableComponents/PriceTable.tsx","components/TableComponents/SearchInput.tsx","components/TableComponents/SelectDate.tsx","components/TableComponents/SelectList.tsx","components/commons/SecuredComponent.tsx","components/ListPrices.tsx","containers/ListPrices.ts","components/Sales/TableRow.tsx","components/Sales/SalesTable.tsx","components/Sales/MontoInput.tsx","components/Sales/Sales.tsx","containers/Sales.ts","components/ManageUpload/TableRow.tsx","components/ManageUpload/SelectListType.tsx","components/ManageUpload/UploadForm.tsx","components/ManageUpload/UploadPriceList.tsx","components/ManageUpload.tsx","containers/ManageUpload.ts","routes/secured.tsx"],"names":["module","exports","Home","className","src","logo","alt","NavMenu","props","toggle","bind","state","isOpen","Navbar","dark","NavbarBrand","href","width","height","NavbarToggler","onClick","this","Collapse","navbar","Nav","vertical","NavItem","NavLink","tag","RRNavLink","exact","to","activeClassName","aria-hidden","match","url","setState","React","LazyButton","LazyDownloadButton","fallback","rows","colorBoton","buttonText","TableRow","row","desc","lista","formatter","format","price","fecha","Intl","NumberFormat","currency","minimumFractionDigits","style","PriceTable","searchText","selectedList","filteredRows","filter","rowData","includes","slice","Container","Table","responsive","map","index","key","SearchInput","updateSearch","InputGroup","InputGroupAddon","addonType","Input","placeholder","value","onChange","event","currentTarget","toUpperCase","SelectDate","selectedDate","listsDateOptions","selectedDateChanged","type","SelectList","selectOptions","selectedListChanged","SecuredComponent","token","children","fallbackUrl","ListPrices","ActivityAndErrorIndicator","loading","error","initAction","init","loaded","prices","length","Row","Col","sm","size","updateSearchText","datesLoaded","connect","login","loginToken","dispatch","actions","ownProps","deleteSale","usuario","monto","Button","color","cargarMonto","Form","onSubmit","preventDefault","parseFloat","console","log","min","step","name","Sales","totalVentas","sales","reduce","total","venta","MontoInput","addSale","username","SalesTable","deleteList","registros","aria-label","SelectListType","for","UploadForm","form","FormData","uploadForm","id","accept","listTypeOptions","toggleNuevaPlanilla","UploadPrices","filteredlistOptions","nuevaPlanilla","ManageUpload","dateChange","date","toISOString","split","getDate","parts","Date","addingNewDate","clearIcon","locale","clearEditingDate","startEditing","upload","filteredLists","list","Secured","path","component","NoMatch"],"mappings":"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","file":"static/js/6.ee2c18b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-black.77a5377c.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-small.fd5c862c.png\";","import * as React from 'react'\nimport  logo from \"../assets/logo-black.png\";\n\nconst Home = () => (\n  <div className=\"home\">\n    <img src={logo} alt=\"Librería Alvarez\"/>\n  </div>\n)\n\nexport default Home","import * as React from \"react\";\nimport { NavLink as RRNavLink } from \"react-router-dom\";\nimport {\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\nimport logo from \"../assets/logo-small.png\";\nimport { IRoutesProps } from \"../types\";\n\ninterface IState {\n  isOpen: boolean;\n}\n\nexport default class NavMenu extends React.Component<IRoutesProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  public render() {\n    return (\n      <div className=\"sidebar\">\n        <Navbar className=\"top-row pl-4\" dark={true}>\n          <NavbarBrand href=\"/\">\n            <img\n              className=\"home-logo\"\n              width=\"35\"\n              height=\"35\"\n              src={logo}\n              alt=\"Librería Alvarez\"\n            />\n            Librería Álvarez\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n        </Navbar>\n        <Collapse isOpen={this.state.isOpen} navbar={true}>\n          <Nav vertical={true}>\n            <NavItem className=\"px-3\">\n              <NavLink\n                tag={RRNavLink}\n                exact={true}\n                to={`/`}\n                activeClassName=\"active\"\n              >\n                <i className=\"oi oi-home\" aria-hidden=\"true\" />\n                Home\n              </NavLink>\n            </NavItem>\n            <NavItem className=\"px-3\">\n              <NavLink\n                tag={RRNavLink}\n                to={`${this.props.match.url}/list`}\n                activeClassName=\"active\"\n              >\n                <i className=\"oi oi-list-rich\" aria-hidden=\"true\" />\n                Lista de Precios\n              </NavLink>\n            </NavItem>\n            <NavItem className=\"px-3\">\n              <NavLink\n                tag={RRNavLink}\n                to={`${this.props.match.url}/upload`}\n                activeClassName=\"active\"\n              >\n                <i className=\"oi oi-cloud-upload\" aria-hidden=\"true\" />\n                Cargar Listas\n              </NavLink>\n            </NavItem>\n            <NavItem className=\"px-3\">\n              <NavLink\n                tag={RRNavLink}\n                to={`${this.props.match.url}/sales`}\n                activeClassName=\"active\"\n              >\n                <i className=\"oi oi-dollar\" aria-hidden=\"true\" />\n                Ventas\n              </NavLink>\n            </NavItem>\n            <NavItem className=\"px-3\">\n              <NavLink\n                tag={RRNavLink}\n                to={`${this.props.match.url}/logout`}\n                activeClassName=\"active\"\n              >\n                <i className=\"oi oi-account-logout\" aria-hidden=\"true\" />\n                Logout\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </div>\n    );\n  }\n  private toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n}\n","import * as React from \"react\";\nimport { IPriceRow } from '../../types';\n\nconst LazyButton= React.lazy(() => import('./ExcelExportButton'))\n\nexport interface IProps {\n    fallback: string;\n    rows: IPriceRow[];\n    buttonText: string;\n    colorBoton: string;\n}\n\nexport default function LazyDownloadButton(props: IProps) {\n    return (\n        <React.Suspense fallback={props.fallback}>\n            <LazyButton rows={props.rows} colorBoton={props.colorBoton} buttonText={props.buttonText} />\n        </React.Suspense>\n    )\n}","import * as React from 'react';\nimport { IPriceRow } from '../../types';\n\nexport interface IProps {\n    row: IPriceRow;\n}\n\nfunction TableRow({ row }: IProps) {\n     return (\n            <tr>\n                <td>{row.desc}</td>\n                <td>{row.lista}</td>\n                <td>{formatter.format(row.price)}</td>\n                <td>{row.fecha}</td>\n            </tr>\n    );\n}\n\nexport default TableRow;\n\nconst formatter = new Intl.NumberFormat('es-AR', {\n    currency: 'ARS',\n    minimumFractionDigits: 2,\n    style: 'currency' \n});","import * as React from 'react';\nimport { Container, Table } from 'reactstrap';\nimport { IPriceRow } from '../../types';\nimport LazyDownloadButton from './LazyDownloadButton';\nimport TableRow from './TableRow';\n\n\n\nexport interface IProps {\n    rows: IPriceRow[];\n    searchText: string;\n    selectedList: string;\n}\n\nfunction PriceTable({ rows, searchText, selectedList }: IProps) {\n    const filteredRows: IPriceRow[] = rows.filter(rowData => rowData.desc.includes(searchText) && (selectedList === \"\" || rowData.lista === selectedList))\n        .slice(0, 20);\n\n    return (\n        <Container>\n            <Table responsive={true}>\n                <thead className=\"thead-dark\">\n                    <tr>\n                        <th>Descripción</th>\n                        <th>Lista</th>\n                        <th>Precio</th>\n                        <th>Fecha de la Lista</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {filteredRows.map((row, index) => <TableRow row={row} key={index} />)}\n                </tbody>\n            </Table>\n            <div className=\"d-flex flex-row-reverse\">\n                <div className=\"p-2\" />\n                <LazyDownloadButton fallback=\"Cargando...\" rows={filteredRows} colorBoton=\"info\" buttonText=\"Descargar planilla con datos filtrados\" />\n            </div>\n        </Container>\n    );\n}\n\nexport default PriceTable;","import * as React from 'react';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\n\nexport interface IStateProps {\n    searchText: string;\n}\n\nexport interface IDispatchProps {\n    updateSearch: (value: string) => void;\n}\n\nexport type IProps = IStateProps & IDispatchProps;\n\nfunction SearchInput({ searchText, updateSearch }: IProps) {\n    const onUpdateInput = (event: React.FormEvent<HTMLInputElement>):void => updateSearch(event.currentTarget.value.toUpperCase());\n    \n    return (\n        <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">Buscar</InputGroupAddon>\n        <Input placeholder=\"Articulo\" value={searchText} onChange={onUpdateInput} />\n      </InputGroup>\n    );\n}\n\nexport default SearchInput;","import * as React from 'react';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\nimport { IDateOfList } from '../../types';\n\nexport interface IStateProps {\n    selectedDate: IDateOfList;\n    listsDateOptions: IDateOfList[];\n}\n\nexport interface IDispatchProps {\n    selectedDateChanged: (value: IDateOfList) => void;\n}\n\nexport type IProps = IStateProps & IDispatchProps;\n\nfunction SelectDate({ selectedDate, listsDateOptions, selectedDateChanged }: IProps) {\n    const onSelectedDateChanged = (event: React.FormEvent<HTMLInputElement>): void => selectedDateChanged({fecha: event.currentTarget.value});\n\n    return (\n        <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">Fecha</InputGroupAddon>\n            <Input type=\"select\" value={selectedDate.fecha} onChange={onSelectedDateChanged} className=\"custom-select\">\n                {listsDateOptions.map((lista, index) => <option key={index} value={lista.fecha}>{lista.fecha}</option>)}\n            </Input>\n        </InputGroup>\n    );\n}\n\nexport default SelectDate;","import * as React from 'react';\nimport { Input, InputGroup, InputGroupAddon } from 'reactstrap';\n\nexport interface IStateProps {\n    selectedList: string;\n    selectOptions: string[];\n}\n\nexport interface IDispatchProps {\n    selectedListChanged: (value: string) => void;\n}\n\nexport type IProps = IStateProps & IDispatchProps;\n\nfunction SelectList({ selectedList, selectOptions, selectedListChanged }: IProps) {\n    const onSelectedListChanged = (event: React.FormEvent<HTMLInputElement>): void => selectedListChanged(event.currentTarget.value.toUpperCase());\n\n    return (\n        <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">Lista</InputGroupAddon>\n            <Input type=\"select\" value={selectedList} onChange={onSelectedListChanged} className=\"custom-select\">\n                <option value=\"\">Todas</option>\n                {selectOptions.map((lista, index) => <option key={index} value={lista}>{lista}</option>)}\n            </Input>\n        </InputGroup>\n    );\n}\n\nexport default SelectList;","import * as React from 'react';\nimport { IToken } from '../../types';\nimport { Redirect } from 'react-router';\n\n\ninterface IStateProps {\n    children: React.ReactNode;\n    token: IToken | null;\n    fallbackUrl: string;\n}\n\ntype IProps = IStateProps;\n\nexport class SecuredComponent extends React.Component<IProps> {\n    public render() {\n        if (this.props.token) {\n            return this.props.children;\n        } else {\n            return <Redirect to={this.props.fallbackUrl} />\n        }     \n    }\n}","import * as React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport { IDateOfList, IPriceRow, IToken } from '../types';\nimport { ActivityAndErrorIndicator } from './commons/ActivityAndErrorIndicator';\nimport LazyDownloadButton from './TableComponents/LazyDownloadButton';\nimport PriceTable from './TableComponents/PriceTable';\nimport SearchInput from './TableComponents/SearchInput';\nimport SelectDate from './TableComponents/SelectDate';\nimport SelectList from './TableComponents/SelectList';\nimport { SecuredComponent } from './commons/SecuredComponent';\n\n\ninterface IStateProps {\n    prices: IPriceRow[];\n    loaded: boolean;\n    loading: boolean;\n    error: Error | null;\n    searchText: string;\n    selectedList: string;\n    selectOptions: string[];\n    selectedDate: IDateOfList;\n    datesLoaded: IDateOfList[];\n    token: IToken | null;\n}\n\ninterface IDispatchProps {\n    init: () => void;\n    updateSearchText: (value: string) => void;\n    selectedListChanged: (value: string) => void;\n    selectedDateChanged: (value: IDateOfList) => void;\n}\n\nexport type IProps = IStateProps & IDispatchProps;\n\nclass ListPrices extends React.Component<IProps, {}> {\n    public render() {\n        return (\n            <SecuredComponent fallbackUrl=\"/\" token={this.props.token}>\n                <ActivityAndErrorIndicator loading={this.props.loading} error={this.props.error} initAction={this.props.init} loaded={this.props.loaded} >\n                    <div>\n                        <h1>Lista de Precios</h1>\n                        <p>Buscar entre <b>{this.props.prices.length}</b> articulos de librería y juguetes.</p>\n                        <Container>\n                            <Row>\n                                <Col sm={{ size: 4 }} >\n                                    <SearchInput searchText={this.props.searchText} updateSearch={this.props.updateSearchText} />\n                                </Col>\n                                <Col sm={{ size: 4 }} >\n                                    <SelectList selectedList={this.props.selectedList} selectOptions={this.props.selectOptions} selectedListChanged={this.props.selectedListChanged} />\n                                </Col>\n                                <Col sm={{ size: 4 }} >\n                                    <SelectDate selectedDate={this.props.selectedDate} listsDateOptions={this.props.datesLoaded} selectedDateChanged={this.props.selectedDateChanged} />\n                                </Col>\n                            </Row>\n                            <br />\n                            <Row>\n                                <Col>\n                                    <PriceTable rows={this.props.prices} searchText={this.props.searchText} selectedList={this.props.selectedList} />\n                                </Col>\n                            </Row>\n                            <LazyDownloadButton fallback=\"Cargando...\" rows={this.props.prices} colorBoton=\"primary\" buttonText=\"Descargar lista de precios completa\" />\n                        </Container>\n                    </div>\n                </ActivityAndErrorIndicator>\n            </SecuredComponent>\n        );\n    }\n\n}\n\nexport default ListPrices;","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { PriceFetchAction } from '../actions';\nimport * as actions from '../actions/listPrices';\nimport ListPrices from '../components/ListPrices';\nimport { IDateOfList, IStoreState } from '../types';\n\nexport function mapStateToProps({ prices, login }: IStoreState) {\n    return {\n        datesLoaded: prices.datesLoaded,\n        error: prices.error,\n        loaded: prices.loaded,\n        loading: prices.loading,\n        prices: prices.prices,\n        searchText: prices.searchText,\n        selectOptions: prices.selectOptions,\n        selectedDate: prices.selectedDate,\n        selectedList: prices.selectedList,\n        token: login.loginToken,\n    }\n}\n    \nexport function mapDispatchToProps(dispatch: Dispatch<PriceFetchAction>) {\n    return {\n        init: () => dispatch(actions.FetchPrices()),\n        selectedDateChanged: (value: IDateOfList) => dispatch(actions.UpdateSelectedDate(value)),\n        selectedListChanged: (value: string) => dispatch(actions.UpdateSelectedList(value)),\n        updateSearchText: (value: string) => dispatch(actions.OnSearchTextUpdate(value)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPrices);\n","import * as React from \"react\";\nimport { IVenta } from \"../../types\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { SalesActions } from \"../../actions\";\nimport * as actions from \"../../actions/salesActions\";\nimport { Button } from \"reactstrap\";\n\nexport interface OwnProps {\n  row: IVenta;\n}\n\nconst formatter = new Intl.NumberFormat(\"es-AR\", {\n  currency: \"ARS\",\n  minimumFractionDigits: 2,\n  style: \"currency\"\n});\n\nfunction TableRow(props: any) {\n  return (\n    <tr>\n      <td>{props.row.fecha}</td>\n      <td>{props.row.usuario}</td>\n      <td>{formatter.format(props.row.monto)}</td>\n      <td>\n        <Button onClick={() => props.deleteSale(props.row.fecha)} color=\"danger\">\n          <i className=\"oi oi-trash\" aria-hidden=\"true\" />\n        </Button>\n      </td>\n    </tr>\n  );\n}\n\nexport function mapStateToProps(state: any, ownProps: any) {\n  return {\n    row: ownProps.row\n  };\n}\nexport function mapDispatchToProps(dispatch: Dispatch<SalesActions>) {\n  return {\n    deleteSale: (fecha: string) => dispatch(actions.DeleteSale(fecha))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TableRow);\n","import * as React from 'react';\nimport { Container, Table } from 'reactstrap';\nimport { IVenta } from '../../types';\nimport TableRow from './TableRow';\n\n\n\nexport interface IProps {\n    rows: IVenta[];\n}\n\nfunction PriceTable({ rows }: IProps) {\n\n    return (\n        <Container>\n            <Table responsive={true}>\n                <thead className=\"thead-dark\">\n                    <tr>\n                        <th>Fecha</th>\n                        <th>Usuario</th>\n                        <th>Monto</th>\n                        <th>Acción</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map((row, index) => <TableRow row={row} key={index} />)}\n                </tbody>\n            </Table>\n        </Container>\n    );\n}\n\nexport default PriceTable;","import * as React from \"react\";\nimport { Input, InputGroup, InputGroupAddon, Form } from \"reactstrap\";\n\nexport interface IDispatchProps {\n  cargarMonto: (value: number) => void;\n}\n\nexport type IProps = IDispatchProps;\n\nfunction SearchInput({ cargarMonto }: IProps) {\n  const enviarMonto = (event: React.FormEvent<HTMLFormElement>): void => {\n    event.preventDefault()\n    cargarMonto(parseFloat(event.currentTarget.monto.value));\n    event.currentTarget.monto.value = '';\n    console.log(event)\n  }\n\n  return (\n    <InputGroup>\n      <InputGroupAddon addonType=\"prepend\">Monto</InputGroupAddon>\n      <Form onSubmit={enviarMonto}>\n      <Input\n        type=\"number\"\n        min=\"0.0\"\n        step=\"0.01\"\n        placeholder=\"Monto de la venta\"\n        name=\"monto\"\n      />\n      </Form>\n    </InputGroup>\n  );\n}\n\nexport default SearchInput;\n","import React from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport { IDateOfList, IVenta } from \"../../types\";\nimport { ActivityAndErrorIndicator } from \"../commons/ActivityAndErrorIndicator\";\nimport SalesTable from \"./SalesTable\";\nimport SelectDate from \"../TableComponents/SelectDate\";\nimport MontoInput from \"./MontoInput\";\n\ninterface IStateProps {\n  sales: IVenta[];\n  loaded: boolean;\n  loading: boolean;\n  error: Error | null;\n  selectedDate: IDateOfList;\n  datesLoaded: IDateOfList[];\n  username: string;\n}\n\ninterface IDispatchProps {\n  init: () => void;\n  selectedDateChanged: (value: IDateOfList) => void;\n  addSale: (monto: number, username:string) => void;\n}\n\nconst formatter = new Intl.NumberFormat(\"es-AR\", {\n  currency: \"ARS\",\n  minimumFractionDigits: 2,\n  style: \"currency\"\n});\n\nexport type IProps = IStateProps & IDispatchProps;\n\nconst Sales = (props: IProps) => {\n  const cargarMonto = (monto: number) => {\n    props.addSale(monto, props.username)\n  }\n\n  const totalVentas = props.sales.reduce(\n    (total, venta) => total + venta.monto,\n    0\n  );\n\n  return (\n    <ActivityAndErrorIndicator\n      loading={props.loading}\n      error={props.error}\n      initAction={props.init}\n      loaded={props.loaded}\n    >\n      <div>\n        <h1>Ventas Diarias</h1>\n        <p>\n          El día <b>{props.selectedDate.fecha}</b> se realizaron {\" \"}\n          <b>{props.sales.length}</b> ventas, sumando <b>{formatter.format(totalVentas)}</b>\n        </p>\n        <Container className=\"xs\">\n          <Row>\n            <Col sm={{ size: 4 }}>\n              <SelectDate\n                selectedDate={props.selectedDate}\n                listsDateOptions={props.datesLoaded}\n                selectedDateChanged={props.selectedDateChanged}\n              />\n            </Col>\n            <Col sm={{ size: 4 }}>\n              <MontoInput\n                cargarMonto={cargarMonto}\n              />\n            </Col>\n          </Row>\n          <br />\n          <Row>\n            <Col>\n              <SalesTable rows={props.sales} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </ActivityAndErrorIndicator>\n  );\n};\n\nexport default Sales;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { SalesActions } from \"../actions\";\nimport * as actions from \"../actions/salesActions\";\nimport Sales from \"../components/Sales/Sales\";\nimport { IDateOfList, IStoreState } from \"../types\";\n\nexport function mapStateToProps({ sales, login }: IStoreState) {\n  return {\n    sales: sales.sales,\n    loaded: sales.loaded,\n    loading: sales.loading,\n    error: sales.error,\n    selectedDate: { fecha: sales.selectedDate },\n    datesLoaded: sales.datesLoaded,\n    username: login.username ? login.username : \"\"\n  };\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch<SalesActions>) {\n  return {\n    init: () => dispatch(actions.FetchSales()),\n    selectedDateChanged: (value: IDateOfList) =>\n      dispatch(actions.SelectDate(value.fecha)),\n    addSale: (monto: number, username: string) =>\n      dispatch(actions.AddSale(monto, username))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sales);\n","import * as React from 'react';\nimport { Button } from 'reactstrap';\nimport { IDeleteListData, ILoadedList } from '../../types';\n\ninterface IStateProps {\n    row: ILoadedList;\n}\n\ninterface IDispatchProps {\n    deleteList: (list: IDeleteListData) => void;\n} \n\ntype IProps = IStateProps & IDispatchProps;\n\nfunction TableRow({ row, deleteList }: IProps) {\n    const deleteListLocal = () =>  deleteList({lista: row.lista, fecha: row.fecha});\n\n     return (\n            <tr>\n                <td>{row.lista}</td>\n                <td>{row.fecha}</td>\n                <td>{row.registros}</td>\n                <td><Button color=\"danger\" aria-label=\"Eliminar\" onClick={deleteListLocal} >Eliminar</Button></td>\n            </tr>\n    );\n}\n\nexport default TableRow;\n","import * as React from 'react';\nimport { Input, Label } from 'reactstrap';\nimport FormGroup from 'reactstrap/lib/FormGroup';\n\nexport interface IStateProps {\n    selectOptions: string[];\n    name: string;\n}\n\nexport type IProps = IStateProps;\n\nfunction SelectListType({ selectOptions, name }: IProps) {\n\n    return (\n        <FormGroup>\n            <Label for=\"nombre-lista\">Nombre de lista:</Label>\n            <Input type=\"select\" name={name} className=\"custom-select\">\n                {selectOptions.map((lista, index) => <option key={index} value={lista}>{lista}</option>)}\n            </Input>\n        </FormGroup>\n    );\n}\n\nexport default SelectListType;","import * as React from 'react';\nimport Button from 'reactstrap/lib/Button';\nimport Card from 'reactstrap/lib/Card';\nimport CardBody from 'reactstrap/lib/CardBody';\nimport CardFooter from 'reactstrap/lib/CardFooter';\nimport CardHeader from 'reactstrap/lib/CardHeader';\nimport Form from 'reactstrap/lib/Form';\nimport FormGroup from 'reactstrap/lib/FormGroup';\nimport FormText from 'reactstrap/lib/FormText';\nimport Input from 'reactstrap/lib/Input';\nimport Label from 'reactstrap/lib/Label';\nimport SelectListType from './SelectListType';\n\n\ninterface IDataProps {\n    fecha: string;\n    listTypeOptions: string[];\n}\n\ninterface IDispatchProps {\n    uploadForm: (form: FormData) => void;\n    toggleNuevaPlanilla: () => void;\n}\n\ntype IProps = IDataProps & IDispatchProps;\n\nfunction UploadForm(props: IProps) {\n\n    const uploadAction = (event: any) => {\n        event.preventDefault();\n        const form = new FormData(event.currentTarget);\n        props.uploadForm(form);\n    }\n\n    return (\n        <Card className=\"border-primary\">\n            <CardHeader><h4>Cargar una nueva planilla</h4></CardHeader>\n            <Form onSubmit={uploadAction} >\n                <CardBody>\n                    <FormGroup>\n                        <Label for=\"file\">Planilla(.xlsx):</Label>\n                        <Input type=\"file\" name=\"file\" id=\"file\" accept=\".xls,.xlsx\" />\n                        <FormText color=\"muted\">\n                            Seleccionar el archivo de la planilla a cargar (formato .xlsx)\n                    </FormText>\n                    </FormGroup>\n                    <SelectListType name=\"tipo-lista\" selectOptions={props.listTypeOptions} />\n                    <FormGroup>\n                        <Label for=\"nombre-lista\">Nombre de lista:</Label>\n                        <Input type=\"text\" name=\"nombre-lista\" id=\"nombre-lista\" />\n                    </FormGroup>\n                    <Input type=\"hidden\" name=\"nombre-hoja\" value=\"precios\" />\n                    <Input type=\"hidden\" name=\"fecha\" value={props.fecha} />\n                </CardBody>\n                <CardFooter>\n                    <Button color=\"primary\">Subir Planilla</Button>{'  '}\n                    <Button color=\"danger\" onClick={props.toggleNuevaPlanilla}>Restablecer</Button>\n                </CardFooter>\n            </Form>\n        </Card>\n    )\n}\n\nexport default UploadForm;\n","import * as React from 'react';\nimport { Button, Table } from 'reactstrap';\nimport { IDateOfList, IDeleteListData, ILoadedList } from '../../types';\nimport TableRow from './TableRow';\nimport UploadForm from './UploadForm';\n\ninterface IStateProps {\n    selectedDate: IDateOfList;\n    filteredlistOptions: ILoadedList[];\n    listTypeOptions: string[];\n    nuevaPlanilla: boolean;\n}\n\ninterface IDispatchProps {\n    uploadForm: (form: FormData) => void;\n    deleteList: (list: IDeleteListData) => void;\n    toggleNuevaPlanilla: () => void;\n}\n\ntype IProps = IStateProps & IDispatchProps;\n\nfunction UploadPrices(props: IProps) {\n    return (\n        <div>\n            <h3>Planillas cargadas:</h3>\n            <Table responsive={true}>\n                <thead className=\"thead-dark\">\n                    <tr>\n                        <th>Lista</th>\n                        <th>Fecha</th>\n                        <th># Registros</th>\n                        <th>Acción</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.filteredlistOptions.map((row, index) => <TableRow row={row} key={index} deleteList={props.deleteList} />)}\n                </tbody>\n            </Table>\n            <br />\n            {props.nuevaPlanilla ?\n                (\n                    <UploadForm uploadForm={props.uploadForm} fecha={props.selectedDate.fecha} listTypeOptions={props.listTypeOptions} toggleNuevaPlanilla={props.toggleNuevaPlanilla} />\n                ) : (\n                    <Button color=\"success\" onClick={props.toggleNuevaPlanilla}>Cargar nueva planilla</Button>\n                )}\n        </div>\n    )\n}\n\nexport default UploadPrices;\n","import * as React from \"react\";\nimport DatePicker from \"react-date-picker\";\nimport Button from \"reactstrap/lib/Button\";\nimport ButtonGroup from \"reactstrap/lib/ButtonGroup\";\nimport Col from \"reactstrap/lib/Col\";\nimport Container from \"reactstrap/lib/Container\";\nimport Row from \"reactstrap/lib/Row\";\nimport { IDateOfList, IDeleteListData, ILoadedList, IToken } from \"../types\";\nimport { ActivityAndErrorIndicator } from \"./commons/ActivityAndErrorIndicator\";\nimport UploadPrices from \"./ManageUpload/UploadPriceList\";\nimport SelectDate from \"./TableComponents/SelectDate\";\nimport { SecuredComponent } from \"./commons/SecuredComponent\";\n\ninterface IStateProps {\n  loading: boolean;\n  error: Error | null;\n  selectedDate: IDateOfList;\n  filteredlistOptions: ILoadedList[];\n  listsDateOptions: IDateOfList[];\n  addingNewDate: boolean;\n  listTypeOptions: string[];\n  nuevaPlanilla: boolean;\n  token: IToken | null;\n}\n\ninterface IDispatchProps {\n  init: () => void;\n  selectedDateChanged: (value: IDateOfList) => void;\n  uploadForm: (form: FormData) => void;\n  startEditing: () => void;\n  deleteList: (list: IDeleteListData) => void;\n  clearEditingDate: () => void;\n  toggleNuevaPlanilla: () => void;\n}\n\nexport type IProps = IStateProps & IDispatchProps;\n\nclass ManageUpload extends React.Component<IProps, {}> {\n  public render() {\n    return (\n      <SecuredComponent fallbackUrl=\"/\" token={this.props.token}>\n        <ActivityAndErrorIndicator\n          loading={this.props.loading}\n          error={this.props.error}\n          initAction={this.props.init}\n          loaded={false}\n        >\n          <h1>Administrar la carga de listas</h1>\n          <p>\n            Fecha selecionada: <b>{this.props.selectedDate.fecha}</b>\n          </p>\n          <Container>\n            {this.props.addingNewDate ? (\n              <Row>\n                <Col sm={{ size: 4 }}>\n                  <ButtonGroup>\n                    <DatePicker\n                      onChange={this.dateChange}\n                      clearIcon={null}\n                      value={this.getDate()}\n                      locale=\"es-419\"\n                    />\n                    <Button\n                      color=\"danger\"\n                      aria-label=\"Restablecer\"\n                      onClick={this.props.clearEditingDate}\n                    >\n                      <i>X</i>\n                    </Button>\n                  </ButtonGroup>\n                </Col>\n              </Row>\n            ) : (\n              <Row>\n                <Col sm={{ size: 4 }}>\n                  <SelectDate\n                    listsDateOptions={this.props.listsDateOptions}\n                    selectedDate={this.props.selectedDate}\n                    selectedDateChanged={this.props.selectedDateChanged}\n                  />\n                </Col>\n                <Col sm={{ size: 4 }}>\n                  <Button color=\"info\" onClick={this.props.startEditing}>\n                    Agregar Nueva Fecha\n                  </Button>\n                </Col>\n              </Row>\n            )}\n\n            <br />\n            <Row>\n              <Col>\n                <UploadPrices\n                  uploadForm={this.props.uploadForm}\n                  selectedDate={this.props.selectedDate}\n                  filteredlistOptions={this.props.filteredlistOptions}\n                  deleteList={this.props.deleteList}\n                  listTypeOptions={this.props.listTypeOptions}\n                  nuevaPlanilla={this.props.nuevaPlanilla}\n                  toggleNuevaPlanilla={this.props.toggleNuevaPlanilla}\n                />\n              </Col>\n            </Row>\n          </Container>\n        </ActivityAndErrorIndicator>\n      </SecuredComponent>\n    );\n  }\n\n  private dateChange: (date: Date | Date[]) => void = (date: Date | Date[]) => {\n    this.props.selectedDateChanged({\n      fecha: (date as Date).toISOString().split(\"T\")[0]\n    });\n  };\n\n  private getDate: () => Date = () => {\n    const parts = this.props.selectedDate.fecha.split(\"-\");\n    const date = new Date(+parts[0], +parts[1] - 1, +parts[2]);\n    return date;\n  };\n}\n\nexport default ManageUpload;\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport * as actions from '../actions/uploadActions';\nimport ManageUpload from '../components/ManageUpload';\nimport { IDateOfList, IDeleteListData, IStoreState } from '../types/index';\n\nexport function mapStateToProps({ upload, login } : IStoreState) {\n    return {\n        addingNewDate: upload.addingNewDate,\n        error: upload.error,\n        filteredlistOptions: upload.filteredLists,\n        listTypeOptions: upload.listTypeOptions,\n        listsDateOptions: upload.listsDateOptions,\n        loading: upload.loading,\n        nuevaPlanilla: upload.nuevaPlanilla,\n        selectedDate: upload.selectedDate,\n        token: login.loginToken,\n    }\n}\n    \nexport function mapDispatchToProps(dispatch: Dispatch<actions.UploadListAction>) {\n    return {\n        clearEditingDate: () => dispatch(actions.ClearEditingDate()),\n        deleteList: (list: IDeleteListData) => dispatch(actions.DeleteList(list)),\n        init: () => dispatch(actions.FetchLastDates()),\n        selectedDateChanged: (value: IDateOfList) => dispatch(actions.UpdateSelectedDate(value)),\n        startEditing: () => dispatch(actions.StartEditing()),\n        toggleNuevaPlanilla: () => dispatch(actions.ToggleNuevaPlanilla()),\n        uploadForm: (form: FormData) => dispatch(actions.UploadList(form)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageUpload);\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport Home from '../components/Home';\nimport NavMenu from '../components/NavMenu';\nimport NoMatch from '../components/NoMatch';\nimport ListPrices from '../containers/ListPrices';\nimport Sales from '../containers/Sales';\nimport ManageUpload from '../containers/ManageUpload';\nimport { IRoutesProps } from '../types';\n\nconst Secured = ({ match }: IRoutesProps) =>\n    <div className=\"app\">\n        <NavMenu match={match} />\n        <div className=\"main\">\n            <div className=\"top-row px-4\">\n                <Link to=\"/\" className=\"ml-md-auto\">libreria-alvarez</Link>\n            </div>\n            <div className=\"content px-4\">\n                <Switch>\n                    <Route exact path={`${match.url}`} component={Home} />\n                    <Route exact path={`${match.url}/list`} component={ListPrices} />\n                    <Route exact path={`${match.url}/upload`} component={ManageUpload} />\n                    <Route exact path={`${match.url}/sales`} component={Sales} />\n                    <Route component={NoMatch} />\n                </Switch>\n            </div>\n        </div>\n    </div>\n\nexport default Secured;"],"sourceRoot":""}